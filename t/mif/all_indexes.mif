<MathFullForm `
atop[
  string[(*WBoldW*)"Indexes"],equal[string["indexes[0,1]"], list[indexes[1,0,char[x],char[a]],string[(*BItalicB*)" or "],indexes[1,0,char[x],num[1,"1"]]]],
  equal[string["indexes[0,2]"], list[indexes[2,0,char[x],char[a],char[b]],string[(*BItalicB*)" or "],indexes[2,0,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["indexes[1,0]"], list[indexes[0,1,char[x],char[a]],string[(*BItalicB*)" or "],indexes[0,1,char[x],num[1,"1"]]]],
  equal[string["indexes[1,1]"], list[indexes[1,1,char[x],char[a],char[b]],string[(*BItalicB*)" or "],indexes[1,1,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["indexes[1,2]"], list[indexes[2,1,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],indexes[2,1,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["indexes[2,0]"], list[indexes[0,2,char[x],char[a],char[b]],string[(*BItalicB*)" or "],indexes[0,2,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["indexes[2,1]"], list[indexes[1,2,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],indexes[1,2,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["indexes[2,2]"], list[indexes[2,2,char[x],char[a],char[b],char[c],char[d]],string[(*BItalicB*)" or "],indexes[2,2,char[x],num[1,"1"],num[2,"2"],num[3,"3"],num[4,"4"]]]],
  equal[string["tensor 2 (2 ops)"], list[tensor[2,char[x],char[a],char[b]],string[(*BItalicB*)" or "],tensor[2,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["tensor 1 (2 ops)"], list[tensor[1,char[x],char[a],char[b]],string[(*BItalicB*)" or "],tensor[1,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["tensor 1 (3 ops)"], list[tensor[1,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],tensor[1,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["tensor 6 (3 ops)"], list[tensor[6,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],tensor[6,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["tensor 2 (3 ops)"], list[tensor[2,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],tensor[2,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["tensor 5 (3 ops)"], list[tensor[5,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],tensor[5,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["tensor 4 (3 ops)"], list[tensor[4,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],tensor[4,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["tensor 3 (3 ops)"], list[tensor[3,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],tensor[3,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["chem 1,0,0,0"], list[chem[1,0,0,0,char[x],char[a]],string[(*BItalicB*)" or "],chem[1,0,0,0,char[x],num[1,"1"]]]],
  equal[string["chem 0,0,1,0"], list[chem[0,0,1,0,char[x],char[a]],string[(*BItalicB*)" or "],chem[0,0,1,0,char[x],num[1,"1"]]]],
  equal[string["chem 1,0,1,0"], list[chem[1,0,1,0,char[x],char[a],char[b]],string[(*BItalicB*)" or "],chem[1,0,1,0,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["chem 1,1,0,0"], list[chem[1,1,0,0,char[x],char[a],char[b]],string[(*BItalicB*)" or "],chem[1,1,0,0,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["chem 0,0,1,1"], list[chem[0,0,1,1,char[x],char[a],char[b]],string[(*BItalicB*)" or "],chem[0,0,1,1,char[x],num[1,"1"],num[2,"2"]]]],
  equal[string["chem 1,1,1,0"], list[chem[1,1,1,0,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],chem[1,1,1,0,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["chem 1,0,1,1"], list[chem[1,0,1,1,char[x],char[a],char[b],char[c]],string[(*BItalicB*)" or "],chem[1,0,1,1,char[x],num[1,"1"],num[2,"2"],num[3,"3"]]]],
  equal[string["chem 1,1,1,1"], list[chem[1,1,1,1,char[x],char[a],char[b],char[c],char[d]],string[(*BItalicB*)" or "],chem[1,1,1,1,char[x],num[1,"1"],num[2,"2"],num[3,"3"],num[4,"4"]]]],
  equal[string["char mod 1,0,0,0,0"], char[x,1,0,0,0,0]],
  equal[string["char mod 2,0,0,0,0"], char[x,2,0,0,0,0]],
  equal[string["char mod 3,0,0,0,0"], char[x,3,0,0,0,0]],
  equal[string["char mod 0,1,0,0,0"], char[x,0,1,0,0,0]],
  equal[string["char mod 0,2,0,0,0"], char[x,0,2,0,0,0]],
  equal[string["char mod 0,3,0,0,0"], char[x,0,3,0,0,0]],
  equal[string["char mod 0,0,1,0,0"], char[x,0,0,1,0,0]],
  equal[string["char mod 0,0,2,0,0"], char[x,0,0,2,0,0]],
  equal[string["char mod 0,0,3,0,0"], char[x,0,0,3,0,0]],
  equal[string["char mod 0,0,0,1,0"], char[x,0,0,0,1,0]],
  equal[string["char mod 0,0,0,0,1"], char[x,0,0,0,0,1]],
  equal[string["char mod 0,0,0,0,2"], char[x,0,0,0,0,2]],
  equal[string["diacritical 1,0,0,0,0"], list[diacritical[1,0,0,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[1,0,0,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[1,0,0,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 2,0,0,0,0"], list[diacritical[2,0,0,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[2,0,0,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[2,0,0,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 3,0,0,0,0"], list[diacritical[3,0,0,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[3,0,0,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[3,0,0,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,1,0,0,0"], list[diacritical[0,1,0,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,1,0,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,1,0,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,2,0,0,0"], list[diacritical[0,2,0,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,2,0,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,2,0,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,3,0,0,0"], list[diacritical[0,3,0,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,3,0,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,3,0,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,0,1,0,0"], list[diacritical[0,0,1,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,0,1,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,0,1,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,0,2,0,0"], list[diacritical[0,0,2,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,0,2,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,0,2,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,0,3,0,0"], list[diacritical[0,0,3,0,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,0,3,0,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,0,3,0,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,0,0,1,0"], list[diacritical[0,0,0,1,0,char[x]],string[(*BItalicB*)" or "],diacritical[0,0,0,1,0,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,0,0,1,0,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,0,0,0,1"], list[diacritical[0,0,0,0,1,char[x]],string[(*BItalicB*)" or "],diacritical[0,0,0,0,1,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,0,0,0,1,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 0,0,0,0,2"], list[diacritical[0,0,0,0,2,char[x]],string[(*BItalicB*)" or "],diacritical[0,0,0,0,2,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[0,0,0,0,2,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 1,0,0,0,2"], list[diacritical[1,0,0,0,2,char[x]],string[(*BItalicB*)" or "],diacritical[1,0,0,0,2,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[1,0,0,0,2,times[char[a],char[b],char[c]]]]],
  equal[string["diacritical 3,1,0,0,2"], list[diacritical[3,1,0,0,2,char[x]],string[(*BItalicB*)" or "],diacritical[3,1,0,0,2,num[1,"1"]],string[(*BItalicB*)" or "],diacritical[3,1,0,0,2,times[char[a],char[b],char[c]]]]],
  equal[string["matrix 1,1"], matrix[1,1,char[x]]],
  equal[string["matrix 1,1 (f)"], matrix[(*i1i*)1,1,char[x]]],
  equal[string["matrix 2,3"], matrix[2,3,num[1,"1"],num[2,"2"],num[3,"3"],char[a],char[b],char[c]]],
  equal[string["matrix 3,2"], matrix[3,2,char[x],char[y],char[a],char[b],num[1,"1"],num[2,"2"]]]]
'> # end of MathFullForm